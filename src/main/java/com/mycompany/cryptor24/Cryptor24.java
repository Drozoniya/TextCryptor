/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.cryptor24;

import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Drozoniya
 */
public class Cryptor24 extends javax.swing.JFrame {

    /**
     * Creates new form fuck off
     */
    public Cryptor24() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Ta = new javax.swing.JTextArea();
        encryptIt = new javax.swing.JButton();
        saveFile = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        decryptIt = new javax.swing.JButton();
        backgroundImage = new javax.swing.JLabel();
        hintButton = new javax.swing.JButton();
        hint = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Ta.setColumns(20);
        Ta.setRows(5);
        jScrollPane1.setViewportView(Ta);

        encryptIt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        encryptIt.setText("ENCRYPT IT");
        encryptIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptItActionPerformed(evt);
            }
        });

        saveFile.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        saveFile.setText("SAVE FILE");
        saveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileActionPerformed(evt);
            }
        });

        jButton1.setText("QUIT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        decryptIt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        decryptIt.setText("DECRYPT IT");
        decryptIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptItActionPerformed(evt);
            }
        });

        hintButton.setFont(new java.awt.Font("Trebuchet MS", 1, 13)); // NOI18N
        hintButton.setText("?");
        hintButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hintButtonActionPerformed(evt);
            }
        });

        hint.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        hint.setForeground(new java.awt.Color(255, 255, 255));
        hint.setText("- ANY CHAR AFTER 122 MIGHT CAUSE CORRUPTION -");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(saveFile, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(hintButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(150, 150, 150)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(hint))
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(encryptIt, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(decryptIt, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(backgroundImage, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(saveFile, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(encryptIt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(decryptIt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hintButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(backgroundImage, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
static String path;
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setResizable(false);
        this.setTitle("TextCryptor -by Drozoniya-");
        Ta.setEditable(false);
        saveFile.setEnabled(false);
        
        Ta.setBackground(Color.black);
        Ta.setForeground(Color.GREEN);
        hint.setVisible(false);
        
        
        
        ImageIcon bgi = new ImageIcon("imgs\\bckground.jpeg");
          backgroundImage.setIcon(bgi);

           
           
           
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "text", "txt");
        JFileChooser Fc= new JFileChooser();
        Fc.setApproveButtonText("Open");
        Fc.setApproveButtonMnemonic('o');
        Fc.setFileFilter(filter);
      int buttChoice= Fc.showSaveDialog(this);
        if(buttChoice==JFileChooser.CANCEL_OPTION){
                this.dispose();
        } else if(buttChoice==JFileChooser.APPROVE_OPTION){
                path=Fc.getSelectedFile().getAbsolutePath();
                 
                    String ligne;
        try{        FileReader F= new FileReader(path);
                    BufferedReader br= new BufferedReader(F);
                do{   ligne=br.readLine();
                      if(ligne!=null)
                       Ta.append(ligne+"\n");
                  }while(ligne!=null);
                br.close();
                F.close();}
        catch(IOException i){
                JPanel pan=new JPanel();
                pan.setLayout(new FlowLayout());
                pan.add(new JLabel("-UNREADABLE FILE-"));
                JButton btn=new JButton("OK");
                pan.add(btn);
                btn.addActionListener((ActionEvent e) ->{
                    dispose();
                });
                JDialog jd= new JDialog();
                jd.setSize(230,100);
                jd.add(pan);
                jd.setLocationRelativeTo(this);
                jd.setTitle("LOG MESSAGE");
                jd.setVisible(true);
                jd.setAlwaysOnTop(true);
                }        
    
        }
        
        
    }//GEN-LAST:event_formWindowOpened

    private void encryptItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptItActionPerformed
        saveFile.setEnabled(true);
        encryptIt.setEnabled(false);
        decryptIt.setEnabled(true);
        String S=Ta.getText();
        int r=5;
        char[] CharArray = S.toCharArray();
        for(int i=0 ; i<CharArray.length ; i++){
            if(CharArray[i]!='\n'){
            CharArray[i]+=r;}
        } 
        String newS= String.valueOf(CharArray);
        Ta.setText(newS);
    }//GEN-LAST:event_encryptItActionPerformed

    private void saveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileActionPerformed
        try {
            FileWriter F= new FileWriter(path);
            PrintWriter pw= new PrintWriter(F);
            pw.print(Ta.getText());
            F.close();
            JPanel pan=new JPanel();
                pan.setLayout(new FlowLayout());
                JLabel jlb= new JLabel("-OPERATION SUCCESSFULY DONE-");
                pan.add(jlb);
                JButton btn=new JButton("OK");
                pan.add(btn);
                btn.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    System.exit(0);
                }
            });
                JDialog jd= new JDialog();
                jd.setSize(230, 100);
                jd.add(pan);
                jd.setLocationRelativeTo(this);
                jd.setTitle("👉🏻MESSAGE👈🏻");
                jd.setVisible(true);
                jd.setAlwaysOnTop(true);
        } catch (IOException ex) {
            JPanel pan=new JPanel();
                pan.setLayout(new FlowLayout());
                JLabel jlb= new JLabel("-SOMETHING WENT WRONG-");
                pan.add(jlb);
                jlb.setForeground(Color.red);
                JLabel jlbicon = new JLabel();
                ImageIcon icon = new ImageIcon("C:\\Users\\Acer\\Documents\\NetBeansProjects\\Cryptor24\\imgs\\alertSign.png");
                jlbicon.setIcon(icon);
                JButton btn= new JButton("OK");
                pan.add(btn);
                btn.addActionListener((ActionEvent e) -> {
                    dispose();
            });
                JDialog jd= new JDialog();
                jd.setSize(230,100);
                jd.add(pan);
                jd.setLocationRelativeTo(this);
                jd.setTitle("LOG MESSAGE");
                jd.setVisible(true);
                jd.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_saveFileActionPerformed

    private void decryptItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptItActionPerformed
        saveFile.setEnabled(true);
        decryptIt.setEnabled(false);
        encryptIt.setEnabled(true);
        String S=Ta.getText();
        
        int r=5;
        char[] CharArray = S.toCharArray();
        for(int i=0 ; i<CharArray.length ; i++){
            if(CharArray[i]!='\n'){
            CharArray[i]-=r;}
        } 
        String newS= String.valueOf(CharArray);
        Ta.setText(newS);
    }//GEN-LAST:event_decryptItActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void hintButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hintButtonActionPerformed
        
        Timer timer = new Timer(5000, new ActionListener() {
    public void actionPerformed(ActionEvent e) {
        hint.setVisible(false);
        
    }
}); hint.setVisible(true);timer.start();
    }//GEN-LAST:event_hintButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cryptor24.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cryptor24.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cryptor24.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cryptor24.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cryptor24().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Ta;
    private javax.swing.JLabel backgroundImage;
    private javax.swing.JButton decryptIt;
    private javax.swing.JButton encryptIt;
    private javax.swing.JLabel hint;
    private javax.swing.JButton hintButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveFile;
    // End of variables declaration//GEN-END:variables
}
